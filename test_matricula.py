"""
Teste espec√≠fico para extra√ß√£o de matr√≠cula do nome do arquivo
"""
from docsAnalyser import DocumentAnalyzer

def test_matricula_extraction():
    print("=== TESTE DE EXTRA√á√ÉO DE MATR√çCULA ===\n")
    
    analyzer = DocumentAnalyzer()
    
    # Testes de extra√ß√£o de matr√≠cula
    test_filenames = [
        "ra03013 doc00029 Casamento pdf-a.pdf",
        "ra12345 documento identidade.pdf",
        "mat67890 comprovante residencia.docx",
        "RA01234 cpf documento.pdf",
        "matricula_98765 contrato.doc",
        "documento_sem_matricula.pdf",
        "ra1234 teste.pdf",
        "ra123456 outro_teste.pdf"
    ]
    
    print("üîç Testando extra√ß√£o de matr√≠cula dos nomes de arquivos:")
    for filename in test_filenames:
        matricula = analyzer.extract_matricula_from_filename(filename)
        status = "‚úÖ" if matricula else "‚ùå"
        print(f"  {status} '{filename}' ‚Üí Matr√≠cula: {matricula or 'N√£o encontrada'}")
    
    print("\nüìù Testando gera√ß√£o de novos nomes com matr√≠cula:")
    
    # Simular texto de documento de casamento
    texto_casamento = """
    CART√ìRIO DE REGISTRO CIVIL
    CERTID√ÉO DE CASAMENTO
    Nome: MARIA SILVA SANTOS
    Casamento realizado em...
    """
    
    # Testar com o arquivo de exemplo
    filename_original = "ra03013 doc00029 Casamento pdf-a.pdf"
    doc_type = analyzer.identify_document_type(texto_casamento)
    
    if doc_type:
        novo_nome = analyzer.generate_new_filename(doc_type, filename_original, texto_casamento)
        print(f"  üìÑ Arquivo original: '{filename_original}'")
        print(f"  üè∑Ô∏è  Tipo identificado: '{doc_type}'")
        print(f"  üìù Novo nome: '{novo_nome}'")
    else:
        print(f"  ‚ùå Tipo de documento n√£o identificado para: '{filename_original}'")
    
    print("\nüìã Regras atualizadas com suporte a matr√≠cula:")
    for doc_type, rule in analyzer.rules.items():
        extract_mat = "Sim" if rule.get('extract_matricula', False) else "N√£o"
        print(f"  ‚Ä¢ {doc_type}: {rule['pattern']}")
        print(f"    Extrai matr√≠cula: {extract_mat}")
    
    print("\n‚úÖ Teste de extra√ß√£o de matr√≠cula conclu√≠do!")

if __name__ == "__main__":
    test_matricula_extraction()
